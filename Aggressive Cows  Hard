class Solution {
public:
    bool possible(vector<int> &stalls,int k, int mid){
        int cow = 1;
        int pos = stalls[0];
        for(int i=1; i<stalls.size(); i++){
            if(stalls[i] - pos >= mid){
                cow++;
                pos = stalls[i];
            }
            if(cow == k){
                return true;
            }
        }
        return false;
    }




    int solve(int n, int k, vector<int> &stalls) {
    
        sort(stalls.begin(),stalls.end());
        int s = 0;
        int e = stalls[stalls.size()-1] - stalls[0];
        int ans = -1;
        while(s<=e){
            int mid = s+(e-s)/2;
            if(possible(stalls,k,mid)){
                ans = mid;
                s = mid+1;
            }else{
                e = mid-1;
            }
        }
        return ans;
    }
};
